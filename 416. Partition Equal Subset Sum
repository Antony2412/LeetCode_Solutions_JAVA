class Solution {
    public boolean canPartition(int[] nums) {
        int sum=0;
        for(int i: nums) sum+=i;
        int t=sum/2;
        if(sum%2!=0) return false;

        boolean dp[][]=new boolean [nums.length][t+1];
        for(int i=0;i<nums.length;i++) dp[i][0]=true;
        for(int i=1;i<t+1;i++) 
        {
            if(nums[0]==i)dp[0][i]=true;
            else dp[0][i]=false;
         }
         for(int i=1;i<nums.length;i++)
         {
             for(int j=1;j<=t;j++)
             {
                 boolean inc=false;
                 if(j<=nums[i]) dp[i][j]=dp[i-1][j];
                 else dp[i][j]=dp[i-1][j]||dp[i-1][j-nums[i]];

             }
         }
        return dp[nums.length-1][t];
    }
}
