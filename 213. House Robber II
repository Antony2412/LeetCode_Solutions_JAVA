class Solution {
    public int rob(int[] num) {
        if(num.length==1)return num[0];
        int a1[]=new int [num.length-1];
        int a2[]=new int [num.length-1];
        int k1=0;int k2=0;
        for(int i=1;i<num.length;i++) a1[i-1]=num[i];
        for(int i=0;i<num.length-1;i++)  a2[i]=num[i];
        int x1=help(a1);
        int x2=help(a2);
        return Math.max(x1,x2);
        
    }
    int help(int []nums)
    {
    int dp[]=new int[nums.length] ;
    dp[0]=nums[0];
    for(int i=1;i<nums.length;i++)
    {
        int pick=nums[i];
        if(i>1) pick=pick+dp[i-2];
        int notpick=dp[i-1];
        dp[i]=Math.max(pick,notpick);
    }   
        return dp[nums.length-1];
    }
}
